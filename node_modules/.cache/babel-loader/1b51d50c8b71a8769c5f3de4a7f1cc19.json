{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _excluded = [\"className\", \"style\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\src\\\\components\\\\TableDrag.js\";\n\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport '../style/TableDrag.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\nimport { MenuOutlined } from '@ant-design/icons';\nimport { arrayMoveImmutable } from 'array-move';\nimport data from '../data.json';\nvar DragHandle = sortableHandle(function () {\n  return /*#__PURE__*/React.createElement(MenuOutlined, {\n    style: {\n      cursor: 'grab',\n      color: '#999'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 41\n    }\n  });\n});\nvar SortableItem = sortableElement(function (props) {\n  return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 47\n    }\n  }));\n});\nvar SortableContainer = sortableContainer(function (props) {\n  return /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 54\n    }\n  }));\n});\nexport default function SortableTable() {\n  var _this2 = this;\n\n  var _useState = useState([data]),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataSource = _useState2[0],\n      setdataSource = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchText = _useState4[0],\n      setsearchText = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchedColumn = _useState6[0],\n      setsearchedColumn = _useState6[1];\n\n  getColumnSearchProps = function getColumnSearchProps(dataIndex) {\n    return {\n      filterDropdown: function filterDropdown(_ref) {\n        var setSelectedKeys = _ref.setSelectedKeys,\n            selectedKeys = _ref.selectedKeys,\n            confirm = _ref.confirm,\n            clearFilters = _ref.clearFilters;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            padding: 8\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Input, {\n          ref: function ref(node) {\n            _this2.searchInput = node;\n          },\n          placeholder: \"Search \".concat(dataIndex),\n          value: selectedKeys[0],\n          onChange: function onChange(e) {\n            return setSelectedKeys(e.target.value ? [e.target.value] : []);\n          },\n          onPressEnter: function onPressEnter() {\n            return _this2.handleSearch(selectedKeys, confirm, dataIndex);\n          },\n          className: \"inputSearch\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(Space, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"primary\",\n          onClick: function onClick() {\n            return _this2.handleSearch(selectedKeys, confirm, dataIndex);\n          },\n          icon: /*#__PURE__*/React.createElement(SearchOutlined, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 31\n            }\n          }),\n          size: \"small\",\n          className: \"btnSearch\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }\n        }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n          className: \"btnSearch\",\n          onClick: function onClick() {\n            return _this2.handleReset(clearFilters);\n          },\n          size: \"small\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }\n        }, \"Reset\")));\n      },\n      filterIcon: function filterIcon(filtered) {\n        return /*#__PURE__*/React.createElement(SearchOutlined, {\n          style: {\n            color: filtered ? '#1890ff' : undefined\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }\n        });\n      },\n      onFilter: function onFilter(value, record) {\n        return record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '';\n      },\n      onFilterDropdownVisibleChange: function onFilterDropdownVisibleChange(visible) {\n        if (visible) {\n          setTimeout(function () {\n            return _this2.searchInput.select();\n          }, 100);\n        }\n      },\n      render: function render(text) {\n        return _this2.state.searchedColumn === dataIndex ? /*#__PURE__*/React.createElement(Highlighter, {\n          highlightStyle: {\n            backgroundColor: '#ffc069',\n            padding: 0\n          },\n          searchWords: [_this2.state.searchText],\n          autoEscape: true,\n          textToHighlight: text ? text.toString() : '',\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }\n        }) : text;\n      }\n    };\n  };\n\n  handleSearch = function handleSearch(selectedKeys, confirm, dataIndex) {\n    confirm();\n\n    _this2.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex\n    });\n  };\n\n  handleReset = function handleReset(clearFilters) {\n    clearFilters();\n\n    _this2.setState({\n      searchText: ''\n    });\n  };\n\n  onSortEnd = function onSortEnd(_ref2) {\n    var oldIndex = _ref2.oldIndex,\n        newIndex = _ref2.newIndex;\n\n    if (oldIndex !== newIndex) {\n      var newData = arrayMoveImmutable([].concat(dataSource), oldIndex, newIndex).filter(function (el) {\n        return !!el;\n      });\n      console.log('Sorted items: ', newData);\n\n      _this2.setState({\n        dataSource: newData\n      });\n    }\n  };\n\n  DraggableContainer = function DraggableContainer(props) {\n    return /*#__PURE__*/React.createElement(SortableContainer, Object.assign({\n      useDragHandle: true,\n      disableAutoscroll: true,\n      helperClass: \"row-dragging\",\n      onSortEnd: _this2.onSortEnd\n    }, props, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  DraggableBodyRow = function DraggableBodyRow(_ref3) {\n    var className = _ref3.className,\n        style = _ref3.style,\n        restProps = _objectWithoutProperties(_ref3, _excluded);\n\n    var index = dataSource.findIndex(function (x) {\n      return x.index === restProps['data-row-key'];\n    });\n    return /*#__PURE__*/React.createElement(SortableItem, Object.assign({\n      index: index\n    }, restProps, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 16\n      }\n    }));\n  };\n\n  var columns = [{\n    title: 'Sort',\n    dataIndex: 'sort',\n    width: 30,\n    className: 'drag-visible',\n    render: function render() {\n      return /*#__PURE__*/React.createElement(DragHandle, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 27\n        }\n      });\n    }\n  }, _objectSpread({\n    title: 'Name',\n    dataIndex: 'name',\n    className: 'drag-visible'\n  }, this.getColumnSearchProps('name')), _objectSpread({\n    title: 'Age',\n    dataIndex: 'age'\n  }, this.getColumnSearchProps('age')), _objectSpread({\n    title: 'Address',\n    dataIndex: 'address'\n  }, this.getColumnSearchProps('address'))];\n  return /*#__PURE__*/React.createElement(Table, {\n    pagination: false,\n    dataSource: dataSource,\n    columns: columns,\n    rowKey: \"index\",\n    components: {\n      body: {\n        wrapper: this.DraggableContainer,\n        row: this.DraggableBodyRow\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/react-training-admin/src/components/TableDrag.js"],"names":["React","useState","Table","Input","Button","Space","Highlighter","SearchOutlined","sortableContainer","sortableElement","sortableHandle","MenuOutlined","arrayMoveImmutable","data","DragHandle","cursor","color","SortableItem","props","SortableContainer","SortableTable","dataSource","setdataSource","searchText","setsearchText","searchedColumn","setsearchedColumn","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","handleReset","filterIcon","filtered","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","state","backgroundColor","setState","onSortEnd","oldIndex","newIndex","newData","concat","filter","el","console","log","DraggableContainer","DraggableBodyRow","className","style","restProps","index","findIndex","x","columns","title","width","body","wrapper","row"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../style/TableDrag.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport { arrayMoveImmutable } from 'array-move';\r\nimport data from '../data.json'\r\n\r\nconst DragHandle = sortableHandle(() => <MenuOutlined style={{ cursor: 'grab', color: '#999' }} />);\r\nconst SortableItem = sortableElement(props => <tr {...props} />);\r\nconst SortableContainer = sortableContainer(props => <tbody {...props} />);\r\n\r\nexport default function SortableTable() {\r\n    const [dataSource, setdataSource] = useState([data])\r\n    const [searchText, setsearchText] = useState(\"\")\r\n    const [searchedColumn, setsearchedColumn] = useState(\"\")\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    className=\"inputSearch\"\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        className=\"btnSearch\"\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button className=\"btnSearch\" onClick={() => this.handleReset(clearFilters)} size=\"small\">\r\n                        Reset\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: text =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n\r\n    onSortEnd = ({ oldIndex, newIndex }) => {\r\n        if (oldIndex !== newIndex) {\r\n            const newData = arrayMoveImmutable([].concat(dataSource), oldIndex, newIndex).filter(el => !!el);\r\n            console.log('Sorted items: ', newData);\r\n            this.setState({ dataSource: newData });\r\n        }\r\n    };\r\n\r\n    DraggableContainer = props => (\r\n        <SortableContainer\r\n            useDragHandle\r\n            disableAutoscroll\r\n            helperClass=\"row-dragging\"\r\n            onSortEnd={this.onSortEnd}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n        const index = dataSource.findIndex(x => x.index === restProps['data-row-key']);\r\n        return <SortableItem index={index} {...restProps} />;\r\n    };\r\n    const columns = [\r\n        {\r\n            title: 'Sort',\r\n            dataIndex: 'sort',\r\n            width: 30,\r\n            className: 'drag-visible',\r\n            render: () => <DragHandle />,\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            className: 'drag-visible',\r\n            ...this.getColumnSearchProps('name'),\r\n        },\r\n        {\r\n            title: 'Age',\r\n            dataIndex: 'age',\r\n            ...this.getColumnSearchProps('age')\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            ...this.getColumnSearchProps('address'),\r\n        },\r\n    ];\r\n    return (\r\n        <Table\r\n            pagination={false}\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            rowKey=\"index\"\r\n            components={{\r\n                body: {\r\n                    wrapper: this.DraggableContainer,\r\n                    row: this.DraggableBodyRow,\r\n                },\r\n            }}\r\n        />\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}