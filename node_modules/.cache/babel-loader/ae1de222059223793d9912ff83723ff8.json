{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\src\\\\App.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Products from \"./pages/Products\";\nimport Reports from \"./pages/Reports\";\nimport Team from \"./pages/Team\";\nimport Message from \"./pages/Message\";\nimport Support from \"./pages/Support\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme, blueTheme, GlobalStyles } from \"./theme\";\nvar StyledApp = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  color: \", \";\\n\"])), function (props) {\n  return props.theme.fontColor;\n});\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      _setTheme = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchText = _useState4[0],\n      _setsearchText = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lang = _useState6[0],\n      setlang = _useState6[1];\n\n  useEffect(function () {\n    if (localStorage.getItem('lang') === null) {\n      localStorage.setItem('lang', \"vn\");\n    } else {\n      var _lang = localStorage.getItem('lang');\n\n      setlang(_lang);\n    }\n\n    if (localStorage.getItem('theme') === null) {\n      localStorage.setItem('theme', \"light\");\n    } else {\n      var _theme = localStorage.getItem('theme');\n\n      _setTheme(_theme);\n    }\n\n    return function () {};\n  }, []);\n\n  var themeToggler = function themeToggler() {\n    if (theme === \"light\") return lightTheme;else if (theme === \"dark\") return darkTheme;else return blueTheme;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: themeToggler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StyledApp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    lang: lang,\n    theme: theme,\n    setsearchText: function setsearchText(value) {\n      return _setsearchText(value);\n    },\n    setTheme: function setTheme(value) {\n      return _setTheme(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/products\",\n    component: Products,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/reports\",\n    component: Reports,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/team\",\n    component: Team,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/message\",\n    component: Message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/support\",\n    component: Support,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/react-training-admin/src/App.js"],"names":["React","useState","useEffect","Navbar","BrowserRouter","Router","Switch","Route","Home","Products","Reports","Team","Message","Support","styled","ThemeProvider","lightTheme","darkTheme","blueTheme","GlobalStyles","StyledApp","div","props","theme","fontColor","App","setTheme","searchText","setsearchText","lang","setlang","localStorage","getItem","setItem","themeToggler","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Products from \"./pages/Products\";\nimport Reports from \"./pages/Reports\";\nimport Team from \"./pages/Team\";\nimport Message from \"./pages/Message\";\nimport Support from \"./pages/Support\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme, blueTheme, GlobalStyles } from \"./theme\";\n\nconst StyledApp = styled.div`\n  color: ${(props) => props.theme.fontColor};\n`;\n\nexport default function App() {\n\n  const [theme, setTheme] = useState(\"\");\n  const [searchText, setsearchText] = useState(\"\")\n  const [lang, setlang] = useState(\"\")\n\n  useEffect(() => {\n    if (localStorage.getItem('lang') === null) {\n      localStorage.setItem('lang', \"vn\")\n    }\n    else {\n      let lang =localStorage.getItem('lang');\n      setlang(lang)\n    }\n    if (localStorage.getItem('theme') === null) {\n      localStorage.setItem('theme', \"light\")\n    }\n    else {\n      let theme =localStorage.getItem('theme');\n      setTheme(theme)\n    }\n    return () => {\n    }\n  }, [])\n\n  const themeToggler = () => {\n    if(theme === \"light\") return lightTheme\n    else if(theme === \"dark\") return darkTheme\n    else return blueTheme\n  };\n  return (\n    <div>\n      <ThemeProvider theme={themeToggler}>\n      <GlobalStyles />\n      <StyledApp>\n      <Router>\n        <Navbar lang={lang} theme= {theme} setsearchText={(value) => setsearchText(value)} setTheme= {(value)=> setTheme(value)}/>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/products\" component={Products} />\n          <Route path=\"/reports\" component={Reports} />\n          <Route path=\"/team\" component={Team} />\n          <Route path=\"/message\" component={Message} />\n          <Route path=\"/support\" component={Support} />\n        </Switch>\n      </Router>\n      </StyledApp>\n    </ThemeProvider>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}