{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\src\\\\components\\\\RightButton.js\";\n\nimport React from 'react';\nimport i18n from '../translation/i18n';\nimport { useTranslation } from 'react-i18next';\nimport \"../style/RightButton.css\";\n\nvar Header = function Header(_ref) {\n  var setTheme = _ref.setTheme,\n      theme = _ref.theme;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  function changeLanguage(e) {\n    i18n.changeLanguage(e.target.value);\n    localStorage.setItem(\"lang\", e.target.value);\n  }\n\n  var isChangeTheme = function isChangeTheme(event) {\n    var value = event.target.value;\n    setTheme(value);\n    localStorage.setItem(\"theme\", value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: localStorage.getItem(\"lang\"),\n    name: \"Lang\",\n    className: \"dropdown-select\",\n    onChange: function onChange(e) {\n      return changeLanguage(e);\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"vi\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, t(\"content.VIETNAMESE\")), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"en\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, t(\"content.ENGLISH\")), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"jav\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, t(\"content.JAPANESE\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: theme,\n    required: true,\n    name: \"Theme\",\n    className: \"dropdown-select\",\n    onChange: function onChange(event) {\n      return isChangeTheme(event);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, t('content.LIGHT')), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, t('content.DARK')), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"blue\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, t('content.BLUE')))));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/react-training-admin/src/components/RightButton.js"],"names":["React","i18n","useTranslation","Header","setTheme","theme","t","changeLanguage","e","target","value","localStorage","setItem","isChangeTheme","event","getItem"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAO,0BAAP;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAyB;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AACpC,wBAAcH,cAAc,EAA5B;AAAA,MAAQI,CAAR,mBAAQA,CAAR;;AAEA,WAASC,cAAT,CAAwBC,CAAxB,EAA2B;AACvBP,IAAAA,IAAI,CAACM,cAAL,CAAoBC,CAAC,CAACC,MAAF,CAASC,KAA7B;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BJ,CAAC,CAACC,MAAF,CAASC,KAAtC;AACH;;AAED,MAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,QAAMJ,KAAK,GAAGI,KAAK,CAACL,MAAN,CAAaC,KAA3B;AACAN,IAAAA,QAAQ,CAACM,KAAD,CAAR;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AACH,GAJD;;AAMA,sBACI;AAAQ,IAAA,SAAS,EAAC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAEC,YAAY,CAACI,OAAb,CAAqB,MAArB,CAAf;AAA6C,IAAA,IAAI,EAAC,MAAlD;AAAyD,IAAA,SAAS,EAAC,iBAAnE;AAAqF,IAAA,QAAQ,EAAE,kBAACP,CAAD;AAAA,aAAKD,cAAc,CAACC,CAAD,CAAnB;AAAA,KAA/F;AAAuH,IAAA,QAAQ,MAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,CAAC,CAAC,oBAAD,CADN,CADJ,eAII;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,CAAC,CAAC,iBAAD,CADN,CAJJ,eAOI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,CAAC,CAAC,kBAAD,CADN,CAPJ,CADJ,CADJ,eAcI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAED,KAAf;AAAsB,IAAA,QAAQ,MAA9B;AAA+B,IAAA,IAAI,EAAC,OAApC;AAA4C,IAAA,SAAS,EAAC,iBAAtD;AAAwE,IAAA,QAAQ,EAAE,kBAACS,KAAD;AAAA,aAAWD,aAAa,CAACC,KAAD,CAAxB;AAAA,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBR,CAAC,CAAC,eAAD,CAAxB,CADJ,eAEI;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,CAAC,CAAC,cAAD,CAAvB,CAFJ,eAGI;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,CAAC,CAAC,cAAD,CAAvB,CAHJ,CADJ,CAdJ,CADJ;AAwBH,CAtCD;;AAwCA,eAAeH,MAAf","sourcesContent":["import React from 'react'\r\nimport i18n from '../translation/i18n';\r\nimport { useTranslation } from 'react-i18next';\r\nimport \"../style/RightButton.css\";\r\n\r\nconst Header = ({ setTheme, theme }) => {\r\n    const { t } = useTranslation()\r\n\r\n    function changeLanguage(e) {\r\n        i18n.changeLanguage(e.target.value);\r\n        localStorage.setItem(\"lang\", e.target.value)\r\n    }\r\n\r\n    const isChangeTheme = (event) => {\r\n        const value = event.target.value\r\n        setTheme(value)\r\n        localStorage.setItem(\"theme\", value)    \r\n    }\r\n \r\n    return (\r\n        <header className=\"\">\r\n            <div className=\"dropdown\">\r\n                <select value={localStorage.getItem(\"lang\")} name=\"Lang\" className=\"dropdown-select\" onChange={(e)=>changeLanguage(e)} required>\r\n                    <option value=\"vi\">\r\n                        {t(\"content.VIETNAMESE\")}\r\n                    </option>\r\n                    <option value=\"en\">\r\n                        {t(\"content.ENGLISH\")}\r\n                    </option>\r\n                    <option value=\"jav\">\r\n                        {t(\"content.JAPANESE\")}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <div className=\"dropdown\">\r\n                <select value={theme} required name=\"Theme\" className=\"dropdown-select\" onChange={(event) => isChangeTheme(event)}>\r\n                    <option value=\"light\">{t('content.LIGHT')}</option>\r\n                    <option value=\"dark\">{t('content.DARK')}</option>\r\n                    <option value=\"blue\">{t('content.BLUE')}</option>\r\n                </select>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n"]},"metadata":{},"sourceType":"module"}