{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _excluded = [\"className\", \"style\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\src\\\\components\\\\TableDrag.js\";\n\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport '../style/TableDrag.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\nimport { MenuOutlined } from '@ant-design/icons';\nimport { arrayMoveImmutable } from 'array-move';\nimport data from '../data.json';\nimport ReactDragListView from 'react-drag-listview';\nvar DragHandle = sortableHandle(function () {\n  return /*#__PURE__*/React.createElement(MenuOutlined, {\n    style: {\n      cursor: 'grab',\n      color: '#999'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 41\n    }\n  });\n});\nvar SortableItem = sortableElement(function (props) {\n  return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 47\n    }\n  }));\n});\nvar SortableContainer = sortableContainer(function (props) {\n  return /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 54\n    }\n  }));\n});\n\nvar SortableTable = /*#__PURE__*/function (_React$Component) {\n  _inherits(SortableTable, _React$Component);\n\n  var _super = _createSuper(SortableTable);\n\n  function SortableTable() {\n    var _this2;\n\n    _classCallCheck(this, SortableTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      dataSource: data,\n      searchText: '',\n      searchedColumn: '',\n      columns: [{\n        title: 'Sort',\n        dataIndex: 'sort',\n        width: 30,\n        className: 'drag-visible',\n        render: function render() {\n          return /*#__PURE__*/React.createElement(DragHandle, {\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 31\n            }\n          });\n        }\n      }, {\n        title: 'Name',\n        dataIndex: 'name',\n        className: 'drag-visible' // ...this.getColumnSearchProps('name'),\n\n      }, {\n        title: 'Age',\n        dataIndex: 'age' // ...this.getColumnSearchProps('age')\n\n      }, {\n        title: 'Address',\n        dataIndex: 'address' // ...this.getColumnSearchProps('address'),\n\n      }]\n    };\n\n    _this2.getColumnSearchProps = function (dataIndex) {\n      return {\n        filterDropdown: function filterDropdown(_ref) {\n          var setSelectedKeys = _ref.setSelectedKeys,\n              selectedKeys = _ref.selectedKeys,\n              confirm = _ref.confirm,\n              clearFilters = _ref.clearFilters;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              padding: 8\n            },\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Input, {\n            ref: function ref(node) {\n              _this2.searchInput = node;\n            },\n            placeholder: \"Search \".concat(dataIndex),\n            value: selectedKeys[0],\n            onChange: function onChange(e) {\n              return setSelectedKeys(e.target.value ? [e.target.value] : []);\n            },\n            onPressEnter: function onPressEnter() {\n              return _this2.handleSearch(selectedKeys, confirm, dataIndex);\n            },\n            className: \"inputSearch\",\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }\n          }), /*#__PURE__*/React.createElement(Space, {\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            type: \"primary\",\n            onClick: function onClick() {\n              return _this2.handleSearch(selectedKeys, confirm, dataIndex);\n            },\n            icon: /*#__PURE__*/React.createElement(SearchOutlined, {\n              __self: _assertThisInitialized(_this2),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 31\n              }\n            }),\n            size: \"small\",\n            className: \"btnSearch\",\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }\n          }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n            className: \"btnSearch\",\n            onClick: function onClick() {\n              return _this2.handleReset(clearFilters);\n            },\n            size: \"small\",\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }\n          }, \"Reset\")));\n        },\n        filterIcon: function filterIcon(filtered) {\n          return /*#__PURE__*/React.createElement(SearchOutlined, {\n            style: {\n              color: filtered ? '#1890ff' : undefined\n            },\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }\n          });\n        },\n        onFilter: function onFilter(value, record) {\n          return record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '';\n        },\n        onFilterDropdownVisibleChange: function onFilterDropdownVisibleChange(visible) {\n          if (visible) {\n            setTimeout(function () {\n              return _this2.searchInput.select();\n            }, 100);\n          }\n        },\n        render: function render(text) {\n          return _this2.state.searchedColumn === dataIndex ? /*#__PURE__*/React.createElement(Highlighter, {\n            highlightStyle: {\n              backgroundColor: '#ffc069',\n              padding: 0\n            },\n            searchWords: [_this2.state.searchText],\n            autoEscape: true,\n            textToHighlight: text ? text.toString() : '',\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }\n          }) : text;\n        }\n      };\n    };\n\n    _this2.handleSearch = function (selectedKeys, confirm, dataIndex) {\n      confirm();\n\n      _this2.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    _this2.handleReset = function (clearFilters) {\n      clearFilters();\n\n      _this2.setState({\n        searchText: ''\n      });\n    };\n\n    _this2.onSortEnd = function (_ref2) {\n      var oldIndex = _ref2.oldIndex,\n          newIndex = _ref2.newIndex;\n      var dataSource = _this2.state.dataSource;\n\n      if (oldIndex !== newIndex) {\n        var newData = arrayMoveImmutable([].concat(dataSource), oldIndex, newIndex).filter(function (el) {\n          return !!el;\n        });\n        console.log('Sorted items: ', newData);\n\n        _this2.setState({\n          dataSource: newData\n        });\n      }\n    };\n\n    _this2.DraggableContainer = function (props) {\n      return /*#__PURE__*/React.createElement(SortableContainer, Object.assign({\n        useDragHandle: true,\n        disableAutoscroll: true,\n        helperClass: \"row-dragging\",\n        onSortEnd: _this2.onSortEnd\n      }, props, {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    _this2.DraggableBodyRow = function (_ref3) {\n      var className = _ref3.className,\n          style = _ref3.style,\n          restProps = _objectWithoutProperties(_ref3, _excluded);\n\n      var dataSource = _this2.state.dataSource;\n      var index = dataSource.findIndex(function (x) {\n        return x.index === restProps['data-row-key'];\n      });\n      return /*#__PURE__*/React.createElement(SortableItem, Object.assign({\n        index: index\n      }, restProps, {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 16\n        }\n      }));\n    };\n\n    _this2.hiddenColName = function () {\n      var hideCol = _toConsumableArray(_this2.state.columns);\n\n      hideCol.filter(function (col) {\n        if (col.className === \"drag-visible\") return col.className = \"drag-hidden\";else hideCol[1].className = \"drag-visible\";\n      });\n\n      _this2.setState({\n        columns: hideCol\n      });\n    };\n\n    _this2.showLabelBtnHiddenName = function (show) {\n      if (show[1].className === \"drag-visible\") return \"Hide col Name\";else return \"Show col Name\";\n    };\n\n    return _this2;\n  }\n\n  _createClass(SortableTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var dataSource = this.state.dataSource;\n      var that = this;\n      var columnss = [{\n        title: 'Sort',\n        dataIndex: 'sort',\n        width: 30,\n        // className: 'drag-visible',\n        render: function render() {\n          return /*#__PURE__*/React.createElement(DragHandle, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 35\n            }\n          });\n        }\n      }, _objectSpread({\n        title: 'Name',\n        dataIndex: 'name',\n        className: 'drag-visible'\n      }, this.getColumnSearchProps('name')), _objectSpread({\n        title: 'Age',\n        dataIndex: 'age'\n      }, this.getColumnSearchProps('age')), _objectSpread({\n        title: 'Address',\n        dataIndex: 'address'\n      }, this.getColumnSearchProps('address'))];\n      this.dragProps = {\n        onDragEnd: function onDragEnd(fromIndex, toIndex) {\n          var columns = [].concat(columnss);\n          var item = columns.splice(fromIndex, 1)[0];\n          columns.splice(toIndex, 0, item);\n          that.setState({\n            columns: columns\n          });\n        },\n        nodeSelector: \"th\"\n      };\n      return /*#__PURE__*/React.createElement(ReactDragListView.DragColumn, Object.assign({}, this.dragProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          width: 150,\n          marginBottom: 15,\n          height: 50,\n          fontSize: 20\n        },\n        onClick: this.hiddenColName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }, this.showLabelBtnHiddenName(this.state.columns)), /*#__PURE__*/React.createElement(Table, {\n        pagination: false,\n        dataSource: dataSource,\n        columns: this.state.columns,\n        rowKey: \"index\",\n        bordered: true,\n        components: {\n          body: {\n            wrapper: this.DraggableContainer,\n            row: this.DraggableBodyRow\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return SortableTable;\n}(React.Component);\n\nexport { SortableTable as default };","map":{"version":3,"sources":["C:/Users/Admin/Desktop/react-training-admin/src/components/TableDrag.js"],"names":["React","Table","Input","Button","Space","Highlighter","SearchOutlined","sortableContainer","sortableElement","sortableHandle","MenuOutlined","arrayMoveImmutable","data","ReactDragListView","DragHandle","cursor","color","SortableItem","props","SortableContainer","SortableTable","state","dataSource","searchText","searchedColumn","columns","title","dataIndex","width","className","render","getColumnSearchProps","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","handleReset","filterIcon","filtered","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","text","backgroundColor","setState","onSortEnd","oldIndex","newIndex","newData","concat","filter","el","console","log","DraggableContainer","DraggableBodyRow","style","restProps","index","findIndex","x","hiddenColName","hideCol","col","showLabelBtnHiddenName","show","that","columnss","dragProps","onDragEnd","fromIndex","toIndex","item","splice","nodeSelector","marginBottom","height","fontSize","body","wrapper","row","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../style/TableDrag.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport { arrayMoveImmutable } from 'array-move';\r\nimport data from '../data.json'\r\nimport ReactDragListView from 'react-drag-listview';\r\n\r\nconst DragHandle = sortableHandle(() => <MenuOutlined style={{ cursor: 'grab', color: '#999' }} />);\r\nconst SortableItem = sortableElement(props => <tr {...props} />);\r\nconst SortableContainer = sortableContainer(props => <tbody {...props} />);\r\n\r\n\r\n\r\nexport default class SortableTable extends React.Component {\r\n    state = {\r\n        dataSource: data,\r\n        searchText: '',\r\n        searchedColumn: '',\r\n        columns: [\r\n            {\r\n                title: 'Sort',\r\n                dataIndex: 'sort',\r\n                width: 30,\r\n                className: 'drag-visible',\r\n                render: () => <DragHandle />,\r\n            },\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                className: 'drag-visible',\r\n                // ...this.getColumnSearchProps('name'),\r\n            },\r\n            {\r\n                title: 'Age',\r\n                dataIndex: 'age',\r\n                // ...this.getColumnSearchProps('age')\r\n            },\r\n            {\r\n                title: 'Address',\r\n                dataIndex: 'address',\r\n                // ...this.getColumnSearchProps('address'),\r\n            },\r\n        ]\r\n    };\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    className=\"inputSearch\"\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        className=\"btnSearch\"\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button className=\"btnSearch\" onClick={() => this.handleReset(clearFilters)} size=\"small\">\r\n                        Reset\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: text =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n\r\n    onSortEnd = ({ oldIndex, newIndex }) => {\r\n        const { dataSource } = this.state;\r\n        if (oldIndex !== newIndex) {\r\n            const newData = arrayMoveImmutable([].concat(dataSource), oldIndex, newIndex).filter(el => !!el);\r\n            console.log('Sorted items: ', newData);\r\n            this.setState({ dataSource: newData });\r\n        }\r\n    };\r\n\r\n    DraggableContainer = props => (\r\n        <SortableContainer\r\n            useDragHandle\r\n            disableAutoscroll\r\n            helperClass=\"row-dragging\"\r\n            onSortEnd={this.onSortEnd}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n        const { dataSource } = this.state;\r\n        const index = dataSource.findIndex(x => x.index === restProps['data-row-key']);\r\n        return <SortableItem index={index} {...restProps} />;\r\n    };\r\n\r\n    hiddenColName = () => {\r\n        const hideCol = [...this.state.columns]\r\n        hideCol.filter((col)=> {\r\n            if(col.className===\"drag-visible\") return col.className=\"drag-hidden\"\r\n        else hideCol[1].className=\"drag-visible\"\r\n        })\r\n        \r\n        this.setState({\r\n            columns: hideCol\r\n        })\r\n    }\r\n\r\n    showLabelBtnHiddenName = (show) => {\r\n        if(show[1].className===\"drag-visible\") return \"Hide col Name\"\r\n        else return \"Show col Name\"\r\n    }\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const that = this\r\n        const columnss = [\r\n                {\r\n                    title: 'Sort',\r\n                    dataIndex: 'sort',\r\n                    width: 30,\r\n                    // className: 'drag-visible',\r\n                    render: () => <DragHandle />,\r\n                },\r\n                {\r\n                    title: 'Name',\r\n                    dataIndex: 'name',\r\n                    className: 'drag-visible',\r\n                    ...this.getColumnSearchProps('name'),\r\n                },\r\n                {\r\n                    title: 'Age',\r\n                    dataIndex: 'age',\r\n                    ...this.getColumnSearchProps('age')\r\n                },\r\n                {\r\n                    title: 'Address',\r\n                    dataIndex: 'address',\r\n                    ...this.getColumnSearchProps('address'),\r\n                },\r\n            ]\r\n        this.dragProps = {\r\n            onDragEnd(fromIndex, toIndex) {\r\n                const columns = [...columnss];\r\n                const item = columns.splice(fromIndex, 1)[0];\r\n                columns.splice(toIndex, 0, item);\r\n                that.setState({\r\n                    columns\r\n                });\r\n            },\r\n            nodeSelector: \"th\"\r\n        };\r\n\r\n        return (\r\n\r\n            <ReactDragListView.DragColumn {...this.dragProps}>\r\n                <button style={{width: 150, marginBottom: 15, height: 50, fontSize: 20}} onClick={this.hiddenColName}>{this.showLabelBtnHiddenName(this.state.columns)}</button>\r\n                <Table\r\n                    pagination={false}\r\n                    dataSource={dataSource}\r\n                    columns={this.state.columns}\r\n                    rowKey=\"index\"\r\n                    bordered\r\n                    components={{\r\n                        body: {\r\n                            wrapper: this.DraggableContainer,\r\n                            row: this.DraggableBodyRow,\r\n                        },\r\n                    }}\r\n                />\r\n            </ReactDragListView.DragColumn>\r\n\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}