{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\src\\\\components\\\\RightButton.js\";\n\nimport React, { useState } from 'react';\nimport i18n from '../translation/i18n';\nimport { useTranslation } from 'react-i18next';\nimport \"../style/RightButton.css\";\n\nvar Header = function Header(_ref) {\n  var setTheme = _ref.setTheme,\n      theme = _ref.theme,\n      lang = _ref.lang;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(theme),\n      _useState2 = _slicedToArray(_useState, 2),\n      settheme = _useState2[1];\n\n  function changeLanguage(e) {\n    i18n.changeLanguage(e.target.value);\n  }\n\n  var isChangeTheme = function isChangeTheme(event) {\n    var value = event.target.value;\n    settheme(value);\n    setTheme(value);\n    localStorage.setItem(\"theme\", value);\n  };\n\n  console.log(lang);\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: lang,\n    name: \"Lang\",\n    className: \"dropdown-select\",\n    onChange: changeLanguage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"vi\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, t(\"content.VIETNAMESE\")), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"en\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, t(\"content.ENGLISH\")), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"jav\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, t(\"content.JAPANESE\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: theme,\n    required: true,\n    name: \"Theme\",\n    className: \"dropdown-select\",\n    onChange: function onChange(event) {\n      return isChangeTheme(event);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, t('content.LIGHT')), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, t('content.DARK')), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"blue\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, t('content.BLUE')))));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/react-training-admin/src/components/RightButton.js"],"names":["React","useState","i18n","useTranslation","Header","setTheme","theme","lang","t","settheme","changeLanguage","e","target","value","isChangeTheme","event","localStorage","setItem","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAO,0BAAP;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA+B;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAC1C,wBAAcJ,cAAc,EAA5B;AAAA,MAAQK,CAAR,mBAAQA,CAAR;;AACA,kBAAqBP,QAAQ,CAACK,KAAD,CAA7B;AAAA;AAAA,MAASG,QAAT;;AAEA,WAASC,cAAT,CAAwBC,CAAxB,EAA2B;AACvBT,IAAAA,IAAI,CAACQ,cAAL,CAAoBC,CAAC,CAACC,MAAF,CAASC,KAA7B;AACH;;AAED,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,QAAMF,KAAK,GAAGE,KAAK,CAACH,MAAN,CAAaC,KAA3B;AACAJ,IAAAA,QAAQ,CAACI,KAAD,CAAR;AACAR,IAAAA,QAAQ,CAACQ,KAAD,CAAR;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,KAA9B;AACH,GALD;;AAMJK,EAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAS,IAAA,KAAK,EAAEA,IAAhB;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAkC,IAAA,SAAS,EAAC,iBAA5C;AAA8D,IAAA,QAAQ,EAAEG,cAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,CAAC,CAAC,oBAAD,CADN,CADJ,eAII;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,CAAC,CAAC,iBAAD,CADN,CAJJ,eAOI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,CAAC,CAAC,kBAAD,CADN,CAPJ,CADJ,CADJ,eAcI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAEF,KAAf;AAAsB,IAAA,QAAQ,MAA9B;AAA+B,IAAA,IAAI,EAAC,OAApC;AAA4C,IAAA,SAAS,EAAC,iBAAtD;AAAwE,IAAA,QAAQ,EAAE,kBAACS,KAAD;AAAA,aAAWD,aAAa,CAACC,KAAD,CAAxB;AAAA,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBP,CAAC,CAAC,eAAD,CAAxB,CADJ,eAEI;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,CAAC,CAAC,cAAD,CAAvB,CAFJ,eAGI;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,CAAC,CAAC,cAAD,CAAvB,CAHJ,CADJ,CAdJ,CADJ;AAwBH,CAvCD;;AAyCA,eAAeJ,MAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport i18n from '../translation/i18n';\r\nimport { useTranslation } from 'react-i18next';\r\nimport \"../style/RightButton.css\";\r\n\r\nconst Header = ({ setTheme, theme, lang }) => {\r\n    const { t } = useTranslation()\r\n    const [, settheme] = useState(theme)\r\n\r\n    function changeLanguage(e) {\r\n        i18n.changeLanguage(e.target.value);\r\n    }\r\n\r\n    const isChangeTheme = (event) => {\r\n        const value = event.target.value\r\n        settheme(value)\r\n        setTheme(value)\r\n        localStorage.setItem(\"theme\", value)    \r\n    }\r\nconsole.log(lang);\r\n    return (\r\n        <header>\r\n            <div className=\"dropdown\">\r\n                <select  value={lang} name=\"Lang\" className=\"dropdown-select\" onChange={changeLanguage}>\r\n                    <option value=\"vi\">\r\n                        {t(\"content.VIETNAMESE\")}\r\n                    </option>\r\n                    <option value=\"en\">\r\n                        {t(\"content.ENGLISH\")}\r\n                    </option>\r\n                    <option value=\"jav\">\r\n                        {t(\"content.JAPANESE\")}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <div className=\"dropdown\">\r\n                <select value={theme} required name=\"Theme\" className=\"dropdown-select\" onChange={(event) => isChangeTheme(event)}>\r\n                    <option value=\"light\">{t('content.LIGHT')}</option>\r\n                    <option value=\"dark\">{t('content.DARK')}</option>\r\n                    <option value=\"blue\">{t('content.BLUE')}</option>\r\n                </select>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n"]},"metadata":{},"sourceType":"module"}