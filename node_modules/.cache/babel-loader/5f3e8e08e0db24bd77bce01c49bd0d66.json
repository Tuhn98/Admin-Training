{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _objectSpread from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _excluded = [\"className\", \"style\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-training-admin\\\\src\\\\components\\\\TableDrag.js\";\n\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport '../style/TableDrag.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\nimport { MenuOutlined } from '@ant-design/icons';\nimport { arrayMoveImmutable } from 'array-move';\nimport data from '../data.json';\nvar DragHandle = sortableHandle(function () {\n  return /*#__PURE__*/React.createElement(MenuOutlined, {\n    style: {\n      cursor: 'grab',\n      color: '#999'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 41\n    }\n  });\n});\nvar columns = [{\n  title: 'Sort',\n  dataIndex: 'sort',\n  width: 30,\n  className: 'drag-visible',\n  render: function render() {\n    return /*#__PURE__*/React.createElement(DragHandle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 23\n      }\n    });\n  }\n}, _objectSpread({\n  title: 'Name',\n  dataIndex: 'name',\n  className: 'drag-visible'\n}, this.getColumnSearchProps('name')), _objectSpread({\n  title: 'Age',\n  dataIndex: 'age'\n}, this.getColumnSearchProps('age')), _objectSpread(_objectSpread({\n  title: 'Address',\n  dataIndex: 'address'\n}, this.getColumnSearchProps('address')), {}, {\n  sorter: function sorter(a, b) {\n    return a.address.length - b.address.length;\n  },\n  sortDirections: ['descend', 'ascend']\n})];\nvar SortableItem = sortableElement(function (props) {\n  return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 47\n    }\n  }));\n});\nvar SortableContainer = sortableContainer(function (props) {\n  return /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 54\n    }\n  }));\n});\n\nvar SortableTable = /*#__PURE__*/function (_React$Component) {\n  _inherits(SortableTable, _React$Component);\n\n  var _super = _createSuper(SortableTable);\n\n  function SortableTable() {\n    var _this2;\n\n    _classCallCheck(this, SortableTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      dataSource: data,\n      searchText: '',\n      searchedColumn: ''\n    };\n\n    _this2.getColumnSearchProps = function (dataIndex) {\n      return {\n        filterDropdown: function filterDropdown(_ref) {\n          var setSelectedKeys = _ref.setSelectedKeys,\n              selectedKeys = _ref.selectedKeys,\n              confirm = _ref.confirm,\n              clearFilters = _ref.clearFilters;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              padding: 8\n            },\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Input, {\n            ref: function ref(node) {\n              _this2.searchInput = node;\n            },\n            placeholder: \"Search \".concat(dataIndex),\n            value: selectedKeys[0],\n            onChange: function onChange(e) {\n              return setSelectedKeys(e.target.value ? [e.target.value] : []);\n            },\n            onPressEnter: function onPressEnter() {\n              return _this2.handleSearch(selectedKeys, confirm, dataIndex);\n            },\n            style: {\n              marginBottom: 8,\n              display: 'block'\n            },\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }\n          }), /*#__PURE__*/React.createElement(Space, {\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            type: \"primary\",\n            onClick: function onClick() {\n              return _this2.handleSearch(selectedKeys, confirm, dataIndex);\n            },\n            icon: /*#__PURE__*/React.createElement(SearchOutlined, {\n              __self: _assertThisInitialized(_this2),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 31\n              }\n            }),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }\n          }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n            onClick: function onClick() {\n              return _this2.handleReset(clearFilters);\n            },\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }\n          }, \"Reset\"), /*#__PURE__*/React.createElement(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: function onClick() {\n              confirm({\n                closeDropdown: false\n              });\n\n              _this2.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex\n              });\n            },\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }\n          }, \"Filter\")));\n        },\n        filterIcon: function filterIcon(filtered) {\n          return /*#__PURE__*/React.createElement(SearchOutlined, {\n            style: {\n              color: filtered ? '#1890ff' : undefined\n            },\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }\n          });\n        },\n        onFilter: function onFilter(value, record) {\n          return record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '';\n        },\n        onFilterDropdownVisibleChange: function onFilterDropdownVisibleChange(visible) {\n          if (visible) {\n            setTimeout(function () {\n              return _this2.searchInput.select();\n            }, 100);\n          }\n        },\n        render: function render(text) {\n          return _this2.state.searchedColumn === dataIndex ? /*#__PURE__*/React.createElement(Highlighter, {\n            highlightStyle: {\n              backgroundColor: '#ffc069',\n              padding: 0\n            },\n            searchWords: [_this2.state.searchText],\n            autoEscape: true,\n            textToHighlight: text ? text.toString() : '',\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }\n          }) : text;\n        }\n      };\n    };\n\n    _this2.handleSearch = function (selectedKeys, confirm, dataIndex) {\n      confirm();\n\n      _this2.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    _this2.handleReset = function (clearFilters) {\n      clearFilters();\n\n      _this2.setState({\n        searchText: ''\n      });\n    };\n\n    _this2.onSortEnd = function (_ref2) {\n      var oldIndex = _ref2.oldIndex,\n          newIndex = _ref2.newIndex;\n      var dataSource = _this2.state.dataSource;\n\n      if (oldIndex !== newIndex) {\n        var newData = arrayMoveImmutable([].concat(dataSource), oldIndex, newIndex).filter(function (el) {\n          return !!el;\n        });\n        console.log('Sorted items: ', newData);\n\n        _this2.setState({\n          dataSource: newData\n        });\n      }\n    };\n\n    _this2.DraggableContainer = function (props) {\n      return /*#__PURE__*/React.createElement(SortableContainer, Object.assign({\n        useDragHandle: true,\n        disableAutoscroll: true,\n        helperClass: \"row-dragging\",\n        onSortEnd: _this2.onSortEnd\n      }, props, {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    _this2.DraggableBodyRow = function (_ref3) {\n      var className = _ref3.className,\n          style = _ref3.style,\n          restProps = _objectWithoutProperties(_ref3, _excluded);\n\n      var dataSource = _this2.state.dataSource;\n      var index = dataSource.findIndex(function (x) {\n        return x.index === restProps['data-row-key'];\n      });\n      return /*#__PURE__*/React.createElement(SortableItem, Object.assign({\n        index: index\n      }, restProps, {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 16\n        }\n      }));\n    };\n\n    return _this2;\n  }\n\n  _createClass(SortableTable, [{\n    key: \"render\",\n    value: function render() {\n      var dataSource = this.state.dataSource;\n      return /*#__PURE__*/React.createElement(Table, {\n        pagination: false,\n        dataSource: dataSource,\n        columns: columns,\n        rowKey: \"index\",\n        components: {\n          body: {\n            wrapper: this.DraggableContainer,\n            row: this.DraggableBodyRow\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return SortableTable;\n}(React.Component);\n\nexport { SortableTable as default };","map":{"version":3,"sources":["C:/Users/Admin/Desktop/react-training-admin/src/components/TableDrag.js"],"names":["React","Table","Input","Button","Space","Highlighter","SearchOutlined","sortableContainer","sortableElement","sortableHandle","MenuOutlined","arrayMoveImmutable","data","DragHandle","cursor","color","columns","title","dataIndex","width","className","render","getColumnSearchProps","sorter","a","b","address","length","sortDirections","SortableItem","props","SortableContainer","SortableTable","state","dataSource","searchText","searchedColumn","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","marginBottom","display","handleReset","closeDropdown","setState","filterIcon","filtered","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","text","backgroundColor","onSortEnd","oldIndex","newIndex","newData","concat","filter","el","console","log","DraggableContainer","DraggableBodyRow","style","restProps","index","findIndex","x","body","wrapper","row","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../style/TableDrag.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport { arrayMoveImmutable } from 'array-move';\r\nimport data from '../data.json'\r\n\r\nconst DragHandle = sortableHandle(() => <MenuOutlined style={{ cursor: 'grab', color: '#999' }} />);\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Sort',\r\n        dataIndex: 'sort',\r\n        width: 30,\r\n        className: 'drag-visible',\r\n        render: () => <DragHandle />,\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        className: 'drag-visible',\r\n        ...this.getColumnSearchProps('name'),\r\n    },\r\n    {\r\n        title: 'Age',\r\n        dataIndex: 'age',\r\n        ...this.getColumnSearchProps('age')\r\n    },\r\n    {\r\n        title: 'Address',\r\n        dataIndex: 'address',\r\n        ...this.getColumnSearchProps('address'),\r\n        sorter: (a, b) => a.address.length - b.address.length,\r\n        sortDirections: ['descend', 'ascend'],\r\n    },\r\n];\r\n\r\n\r\nconst SortableItem = sortableElement(props => <tr {...props} />);\r\nconst SortableContainer = sortableContainer(props => <tbody {...props} />);\r\n\r\nexport default class SortableTable extends React.Component {\r\n    state = {\r\n        dataSource: data,\r\n        searchText: '',\r\n        searchedColumn: '',\r\n    };\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ marginBottom: 8, display: 'block' }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({ closeDropdown: false });\r\n                            this.setState({\r\n                                searchText: selectedKeys[0],\r\n                                searchedColumn: dataIndex,\r\n                            });\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: text =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n\r\n    onSortEnd = ({ oldIndex, newIndex }) => {\r\n        const { dataSource } = this.state;\r\n        if (oldIndex !== newIndex) {\r\n            const newData = arrayMoveImmutable([].concat(dataSource), oldIndex, newIndex).filter(el => !!el);\r\n            console.log('Sorted items: ', newData);\r\n            this.setState({ dataSource: newData });\r\n        }\r\n    };\r\n\r\n    DraggableContainer = props => (\r\n        <SortableContainer\r\n            useDragHandle\r\n            disableAutoscroll\r\n            helperClass=\"row-dragging\"\r\n            onSortEnd={this.onSortEnd}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n        const { dataSource } = this.state;\r\n        const index = dataSource.findIndex(x => x.index === restProps['data-row-key']);\r\n        return <SortableItem index={index} {...restProps} />;\r\n    };\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n\r\n        return (\r\n            <Table\r\n                pagination={false}\r\n                dataSource={dataSource}\r\n                columns={columns}\r\n                rowKey=\"index\"\r\n                components={{\r\n                    body: {\r\n                        wrapper: this.DraggableContainer,\r\n                        row: this.DraggableBodyRow,\r\n                    },\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}